package main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Objects;
import jetbrains.mps.generator.template.MappingScriptContext;
import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.io.IOException;
import com.sun.speech.freetts.audio.AudioPlayer;
import com.sun.speech.freetts.audio.SingleFileAudioPlayer;
import javax.sound.sampled.AudioFileFormat;
import java.util.Map;
import jetbrains.mps.generator.impl.query.ScriptCodeBlock;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.generator.impl.query.IfMacroCondition;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static Object propertyMacro_GetValue_1_0(final PropertyMacroContext _context) {
    return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL), null);
  }
  public static Object propertyMacro_GetValue_1_1(final PropertyMacroContext _context) {
    if (isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.default_path$K32T))) {
      return ("/" + SPropertyOperations.getString(_context.getNode(), PROPS.default_path$K32T) + "/MPS_ASTERISK/home.wav").replaceAll("//", "/");
    } else {
      return "/etc/asterisk/MPS_ASTERISK/home.wav";
    }
  }
  public static Object propertyMacro_GetValue_1_2(final PropertyMacroContext _context) {
    Integer tmp = SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), PROPS.duration$mi_f);
    if (isNotEmptyString(tmp.toString()) && tmp != 0) {
      return tmp.toString();
    }
    return "5";
  }
  public static Object propertyMacro_GetValue_1_3(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.event$pmgi), PROPS.trigger$DqFK);
  }
  public static Object propertyMacro_GetValue_1_4(final PropertyMacroContext _context) {
    return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL) + "TIMEOUT", null);
  }
  public static Object propertyMacro_GetValue_1_5(final PropertyMacroContext _context) {
    if (isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.default_number$JXbw))) {
      return SPropertyOperations.getString(_context.getNode(), PROPS.default_number$JXbw);
    } else {
      return "800";
    }
  }
  public static Object propertyMacro_GetValue_1_6(final PropertyMacroContext _context) {
    return "extensions" + SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).replaceAll(" ", "_");
  }
  public static Object propertyMacro_GetValue_3_0(final PropertyMacroContext _context) {
    return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).replace(" ", "_"), null);
  }
  public static Object propertyMacro_GetValue_3_1(final PropertyMacroContext _context) {
    String name = SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.event$pmgi), PROPS.trigger$DqFK);
    for (SNode actvt : Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getNodeAncestors(_context.getNode(), null, false), CONCEPTS.Activity$Oz))) {
      name = SPropertyOperations.getString(SLinkOperations.getTarget(actvt, LINKS.event$pmgi), PROPS.trigger$DqFK) + name;
    }
    name += SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.event$pmgi), PROPS.name$MnvL);

    String path;
    if (isNotEmptyString(SPropertyOperations.getString(Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getNodeAncestors(_context.getNode(), null, false), CONCEPTS.WorkSpace$A5)).first(), PROPS.default_path$K32T))) {
      path = ("/" + SPropertyOperations.getString(Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getNodeAncestors(_context.getNode(), null, false), CONCEPTS.WorkSpace$A5)).first(), PROPS.default_path$K32T) + "/MPS_ASTERISK/").replaceAll("//", "/");
    } else {
      path = "/etc/asterisk/MPS_ASTERISK/";
    }
    path.replaceAll("//", "/");
    String returnVal = path + name.replaceAll(" ", "_") + ".wav";
    return returnVal;

  }
  public static Object propertyMacro_GetValue_3_2(final PropertyMacroContext _context) {
    return "\"" + SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.event$pmgi), PROPS.name$MnvL) + "\"";
  }
  public static Object propertyMacro_GetValue_3_3(final PropertyMacroContext _context) {
    Integer tmp = SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), PROPS.duration$mi_f);
    if (isNotEmptyString(tmp.toString()) && tmp != 0) {
      return tmp.toString();
    }
    return "5";
  }
  public static Object propertyMacro_GetValue_3_4(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.trigger$DqFK);
  }
  public static Object propertyMacro_GetValue_3_5(final PropertyMacroContext _context) {
    return _context.createUniqueName(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.event$pmgi), PROPS.name$MnvL) + "TIMEOUT", null);
  }
  public static Object propertyMacro_GetValue_7_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.number$M7Yy);
  }
  public static Object propertyMacro_GetValue_9_0(final PropertyMacroContext _context) {
    return _context.createUniqueName("record", null) + ".wav";
  }
  public static Object propertyMacro_GetValue_12_0(final PropertyMacroContext _context) {
    return "sip" + SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).replaceAll(" ", "_");
  }
  public static Object referenceMacro_GetReferent_1_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), LINKS.event$pmgi), "Event");
  }
  public static Object referenceMacro_GetReferent_3_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "Event");
  }
  public static Object referenceMacro_GetReferent_3_1(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode())), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode())), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static Object referenceMacro_GetReferent_3_2(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode())), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode())), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static Object referenceMacro_GetReferent_4_0(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static Object referenceMacro_GetReferent_5_0(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))))), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))))), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static Object referenceMacro_GetReferent_6_0(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static Object referenceMacro_GetReferent_7_0(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static Object referenceMacro_GetReferent_9_0(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static Object referenceMacro_GetReferent_10_0(final ReferenceMacroContext _context) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))))), CONCEPTS.WorkSpace$A5))) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()))))), CONCEPTS.Activity$Oz), LINKS.event$pmgi), "Event");
    } else {
      return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), "WS");
    }
  }
  public static boolean ifMacro_Condition_1_0(final IfMacroContext _context) {
    return isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.info$rXd3));
  }
  public static boolean ifMacro_Condition_1_1(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.toolbar$qdja);
  }
  public static boolean ifMacro_Condition_1_2(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Replay$Q_);
  }
  public static boolean ifMacro_Condition_1_3(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Replay$Q_);
  }
  public static boolean ifMacro_Condition_1_4(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Back$$j);
  }
  public static boolean ifMacro_Condition_1_5(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Back$$j);
  }
  public static boolean ifMacro_Condition_1_6(final IfMacroContext _context) {

    SNode action = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi);
    return !(SNodeOperations.isInstanceOf(action, CONCEPTS.Back$$j) || SNodeOperations.isInstanceOf(action, CONCEPTS.Replay$Q_));
  }
  public static boolean ifMacro_Condition_1_7(final IfMacroContext _context) {
    try {
      if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.DirectCall$zl), PROPS.isFinal$bKXT))) {
        return true;
      } else {
        return false;
      }
    } catch (Exception e) {
    }

    try {
      if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.GetInfo$$M), PROPS.isFinal$cFSh))) {
        return true;
      } else {
        return false;
      }
    } catch (Exception e) {
    }

    try {
      if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Other$zO), PROPS.isFinal$jv5i))) {
        return true;
      } else {
        return false;
      }
    } catch (Exception e) {
    }

    try {
      if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Record$xQ), PROPS.isFinal$w2re))) {
        return true;
      } else {
        return false;
      }
    } catch (Exception e) {
    }

    return false;
  }
  public static boolean ifMacro_Condition_3_0(final IfMacroContext _context) {
    if (isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.playback$XRxp)) || SNodeOperations.isInstanceOf(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).first(), CONCEPTS.Menu$By)) {
      return true;
    } else {
      return false;
    }
  }
  public static boolean ifMacro_Condition_3_1(final IfMacroContext _context) {
    if (isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.playback$XRxp)) || SNodeOperations.isInstanceOf(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).first(), CONCEPTS.Menu$By)) {
      return false;
    } else {
      return true;
    }
  }
  public static boolean ifMacro_Condition_3_2(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).first(), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_3(final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Action$AN);
      }
    });
  }
  public static boolean ifMacro_Condition_3_4(final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Action$AN);
      }
    });
  }
  public static boolean ifMacro_Condition_3_5(final IfMacroContext _context) {
    return !(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Action$AN);
      }
    }));
  }
  public static boolean ifMacro_Condition_3_6(final IfMacroContext _context) {
    return !(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Action$AN);
      }
    }));
  }
  public static boolean ifMacro_Condition_3_7(final IfMacroContext _context) {
    return !(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Action$AN);
      }
    }));
  }
  public static boolean ifMacro_Condition_3_8(final IfMacroContext _context) {
    return !(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.Action$AN);
      }
    }));
  }
  public static boolean ifMacro_Condition_3_9(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_10(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_11(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_12(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Replay$Q_) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_13(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Replay$Q_) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_14(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Back$$j) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_15(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Back$$j) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_16(final IfMacroContext _context) {
    SNode action = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi);
    return !(SNodeOperations.isInstanceOf(action, CONCEPTS.Back$$j) || SNodeOperations.isInstanceOf(action, CONCEPTS.Replay$Q_)) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_3_17(final IfMacroContext _context) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By)) {
      try {
        if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.DirectCall$zl), PROPS.isFinal$bKXT))) {
          return true;
        } else {
          return false;
        }
      } catch (Exception e) {
      }

      try {
        if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.GetInfo$$M), PROPS.isFinal$cFSh))) {
          return true;
        } else {
          return false;
        }
      } catch (Exception e) {
      }

      try {
        if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Other$zO), PROPS.isFinal$jv5i))) {
          return true;
        } else {
          return false;
        }
      } catch (Exception e) {
      }

      try {
        if (!(SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi), CONCEPTS.Record$xQ), PROPS.isFinal$w2re))) {
          return true;
        } else {
          return false;
        }
      } catch (Exception e) {
      }
      return false;
    }
    return false;
  }
  public static boolean ifMacro_Condition_3_18(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.commands$oZIM), CONCEPTS.Menu$By);
  }
  public static boolean ifMacro_Condition_4_0(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$jv5i);
  }
  public static boolean ifMacro_Condition_4_1(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$jv5i);
  }
  public static boolean ifMacro_Condition_4_2(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$jv5i));
  }
  public static boolean ifMacro_Condition_6_0(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$cFSh);
  }
  public static boolean ifMacro_Condition_6_1(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$cFSh);
  }
  public static boolean ifMacro_Condition_6_2(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$cFSh));
  }
  public static boolean ifMacro_Condition_7_0(final IfMacroContext _context) {
    return isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.number$M7Yy));
  }
  public static boolean ifMacro_Condition_7_1(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$bKXT);
  }
  public static boolean ifMacro_Condition_7_2(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$bKXT);
  }
  public static boolean ifMacro_Condition_7_3(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$bKXT));
  }
  public static boolean ifMacro_Condition_9_0(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$w2re);
  }
  public static boolean ifMacro_Condition_9_1(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$w2re);
  }
  public static boolean ifMacro_Condition_9_2(final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), PROPS.isFinal$w2re));
  }
  public static SNode sourceNodeQuery_1_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.bodyMenu$Of2I);
  }
  public static SNode sourceNodeQuery_1_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi);
  }
  public static SNode sourceNodeQuery_3_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.event$pmgi);
  }
  public static SNode sourceNodeQuery_3_1(final SourceSubstituteMacroNodeContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getChildren(_context.getNode()), CONCEPTS.Action$AN)).first();
  }
  public static SNode sourceNodeQuery_3_2(final SourceSubstituteMacroNodeContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getChildren(_context.getNode()), CONCEPTS.Menu$By)).first();
  }
  public static SNode sourceNodeQuery_3_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorkSpace$A5, false, false), LINKS.timeout$r9ki), LINKS.Action$uVoi);
  }
  public static Iterable<SNode> sourceNodesQuery_1_0(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.bodyMenu$Of2I), LINKS.activities$gAHC)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(it, LINKS.event$pmgi), PROPS.trigger$DqFK), "X"));
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_2_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.activities$gAHC);
  }
  public static Iterable<SNode> sourceNodesQuery_3_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.collectMany(SNodeOperations.ofConcept(SNodeOperations.getChildren(_context.getNode()), CONCEPTS.Menu$By), LINKS.events$gxkh);
  }
  public static void mappingScript_CodeBlock_11(final MappingScriptContext _context) {

    String path = System.getProperty("user.home") + "/MPS_ASTERISK/";
    boolean isMac = System.getProperty("os.name").toLowerCase().contains("mac");

    String name = "0";
    Voice voice;
    System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
    VoiceManager voiceManager = VoiceManager.getInstance();

    voice = voiceManager.getVoice("kevin16");
    voice.allocate();



    for (SNode activity : ListSequence.fromList(SModelOperations.nodes(_context.getModel(), CONCEPTS.Activity$Oz))) {
      String playback = "";
      if (isNotEmptyString(SPropertyOperations.getString(activity, PROPS.playback$XRxp))) {
        playback = SPropertyOperations.getString(activity, PROPS.playback$XRxp);
      }

      name = SPropertyOperations.getString(SLinkOperations.getTarget(activity, LINKS.event$pmgi), PROPS.trigger$DqFK);
      for (SNode actvt2 : Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getNodeAncestors(activity, null, false), CONCEPTS.Activity$Oz))) {
        name = SPropertyOperations.getString(SLinkOperations.getTarget(actvt2, LINKS.event$pmgi), PROPS.trigger$DqFK) + name;
      }
      name += SPropertyOperations.getString(SLinkOperations.getTarget(activity, LINKS.event$pmgi), PROPS.name$MnvL).replaceAll(" ", "_");
      String actionOptions = " ";


      if (SNodeOperations.isInstanceOf(ListSequence.fromList(SNodeOperations.getChildren(activity)).first(), CONCEPTS.Menu$By)) {
        for (SNode event : Sequence.fromIterable(SLinkOperations.collectMany(SNodeOperations.ofConcept(SNodeOperations.getChildren(activity), CONCEPTS.Menu$By), LINKS.events$gxkh))) {
          String trigger = SPropertyOperations.getString(event, PROPS.trigger$DqFK);
          if (Objects.equals(trigger, "*")) {
            trigger = "star";
          }
          if (Objects.equals(trigger, "#")) {
            trigger = "hash";
          }
          actionOptions = actionOptions + ", for " + SPropertyOperations.getString(event, PROPS.name$MnvL) + " press " + trigger;
        }
      } else {
        if (isEmptyString(SPropertyOperations.getString(activity, PROPS.playback$XRxp))) {
          continue;
        }
      }


      if (isMac == true) {
        try {
          String command = "say -v samantha -o " + path + name + ".wav" + " --data-format=LEF32@8000 " + playback + actionOptions;
          Runtime.getRuntime().exec(command);
        } catch (IOException e) {
          e.printStackTrace();
        }
      } else {
        AudioPlayer tmpPlayer = new SingleFileAudioPlayer(path + name, AudioFileFormat.Type.WAVE);
        voice.setAudioPlayer(tmpPlayer);
        voice.speak(playback + actionOptions);
        tmpPlayer.close();
        tmpPlayer.end();
      }
    }

    String options = " ";
    String playback = "";
    if (isNotEmptyString(SPropertyOperations.getString(ListSequence.fromList(SModelOperations.roots(_context.getModel(), CONCEPTS.WorkSpace$A5)).first(), PROPS.info$rXd3))) {
      playback = SPropertyOperations.getString(ListSequence.fromList(SModelOperations.roots(_context.getModel(), CONCEPTS.WorkSpace$A5)).first(), PROPS.info$rXd3);
    }

    for (SNode event : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ListSequence.fromList(SModelOperations.roots(_context.getModel(), CONCEPTS.WorkSpace$A5)).first(), LINKS.bodyMenu$Of2I), LINKS.events$gxkh))) {
      String trigger = SPropertyOperations.getString(event, PROPS.trigger$DqFK);
      if (Objects.equals(trigger, "*")) {
        trigger = "star";
      }
      if (Objects.equals(trigger, "#")) {
        trigger = "hash";
      }

      options = options + ", for " + SPropertyOperations.getString(event, PROPS.name$MnvL) + " press " + trigger;
    }
    if (isMac == true) {
      try {
        String command = "say -v samantha -o " + path + "home" + ".wav" + " --data-format=LEF32@8000 " + playback + options;
        Runtime.getRuntime().exec(command);
      } catch (IOException e) {
        e.printStackTrace();
      }

    } else {
      AudioPlayer tmpPlayer = new SingleFileAudioPlayer(path + "home", AudioFileFormat.Type.WAVE);
      voice.setAudioPlayer(tmpPlayer);
      voice.speak(playback + options);
      tmpPlayer.close();
      tmpPlayer.end();
    }
  }
  private final Map<String, ScriptCodeBlock> mscbMethods = new HashMap<String, ScriptCodeBlock>();
  {
    int i = 0;
    mscbMethods.put("4077690302637424763", new SCB(i++));
  }
  @Override
  @NotNull
  public ScriptCodeBlock getScriptCodeBlock(@NotNull QueryKey identity) {
    ScriptCodeBlock query = identity.forTemplateNode(mscbMethods);
    return (query != null ? query : super.getScriptCodeBlock(identity));
  }
  private static class SCB implements ScriptCodeBlock {
    private final int methodKey;
    public SCB(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public void invoke(MappingScriptContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          QueriesGenerated.mappingScript_CodeBlock_11(ctx);
          return;
        default:
          throw new GenerationFailureException(String.format("There's no code block with method index %d ", methodKey));
      }
    }
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("479456951538974395", new SNQ(i++));
    snqMethods.put("3277254067138088698", new SNQ(i++));
    snqMethods.put("4728754030118815389", new SNQ(i++));
    snqMethods.put("4728754030118874103", new SNQ(i++));
    snqMethods.put("4728754030136216505", new SNQ(i++));
    snqMethods.put("4728754030119357852", new SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    SourceNodeQuery query = identity.forFunctionNode(snqMethods);
    return (query != null ? query : super.getSourceNodeQuery(identity));
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_1_0(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_1_1(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_3_0(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_3_1(ctx);
        case 4:
          return QueriesGenerated.sourceNodeQuery_3_2(ctx);
        case 5:
          return QueriesGenerated.sourceNodeQuery_3_3(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("6630304389629574181", new SNsQ(i++));
    snsqMethods.put("2493374653982037920", new SNsQ(i++));
    snsqMethods.put("4728754030119007418", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_0(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_3_0(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("6630304389630715255", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "HOME"));
    pvqMethods.put("2706908311032669968", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x6a75f8ea190a09dL, 0x6a75f8ea190a09fL, "value"), "path"));
    pvqMethods.put("4728754030138247791", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x6a75f8ea190a09dL, 0x6a75f8ea190a09fL, "value"), "5"));
    pvqMethods.put("6630304389629581354", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x13a8ce4f715c9dafL, 0x13a8ce4f715c9db2L, "target"), "Trigger"));
    pvqMethods.put("3277254067138088493", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "timeout"));
    pvqMethods.put("4464490040778929839", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x13a8ce4f715c9dafL, 0x13a8ce4f715c9db2L, "target"), "800"));
    pvqMethods.put("8465164147137093263", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x10bb6449f9c963fcL, 0x757a4df10365e094L, "typeOfFile"), "extensions"));
    pvqMethods.put("4728754030118816558", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "NAME"));
    pvqMethods.put("4728754030118823379", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x6a75f8ea190a09dL, 0x6a75f8ea190a09fL, "value"), "info"));
    pvqMethods.put("4728754030118851325", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x6a75f8ea190a09dL, 0x6a75f8ea190a09fL, "value"), "name"));
    pvqMethods.put("4728754030138410416", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x6a75f8ea190a09dL, 0x6a75f8ea190a09fL, "value"), "5"));
    pvqMethods.put("4728754030119040212", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x13a8ce4f715c9dafL, 0x13a8ce4f715c9db2L, "target"), "TRIGGER"));
    pvqMethods.put("4728754030119117513", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "timeout"));
    pvqMethods.put("4728754030115707626", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x6b5142eafd0410bdL, 0x6b5142eafd0410c0L, "value1"), "number"));
    pvqMethods.put("4728754030115777147", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x6b5142eafd0410bdL, 0x6b5142eafd0410c0L, "value1"), "record-$(RandomNumber).wav"));
    pvqMethods.put("8465164147138129402", new PVQ(i++, MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x10bb6449f9c963fcL, 0x757a4df10365e094L, "typeOfFile"), "sip"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_1_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_1_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_1_2(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_1_3(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetValue_1_4(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetValue_1_5(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetValue_1_6(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetValue_3_0(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetValue_3_1(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetValue_3_2(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetValue_3_3(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetValue_3_4(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetValue_3_5(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetValue_7_0(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetValue_9_0(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetValue_12_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("2570975912433507136", new IfMC(i++));
    imcMethods.put("2570975912438877512", new IfMC(i++));
    imcMethods.put("3277254067138088511", new IfMC(i++));
    imcMethods.put("3277254067138088568", new IfMC(i++));
    imcMethods.put("3277254067138088586", new IfMC(i++));
    imcMethods.put("3277254067138088651", new IfMC(i++));
    imcMethods.put("3277254067138088669", new IfMC(i++));
    imcMethods.put("3277254067138088751", new IfMC(i++));
    imcMethods.put("4728754030118827281", new IfMC(i++));
    imcMethods.put("4728754030118838096", new IfMC(i++));
    imcMethods.put("4728754030118863724", new IfMC(i++));
    imcMethods.put("4728754030118891882", new IfMC(i++));
    imcMethods.put("4728754030118904992", new IfMC(i++));
    imcMethods.put("4728754030118932568", new IfMC(i++));
    imcMethods.put("4728754030118950791", new IfMC(i++));
    imcMethods.put("4728754030118970572", new IfMC(i++));
    imcMethods.put("4728754030118959542", new IfMC(i++));
    imcMethods.put("4728754030119116735", new IfMC(i++));
    imcMethods.put("4728754030119177192", new IfMC(i++));
    imcMethods.put("4728754030119153271", new IfMC(i++));
    imcMethods.put("4728754030119214145", new IfMC(i++));
    imcMethods.put("4728754030119255351", new IfMC(i++));
    imcMethods.put("4728754030119275064", new IfMC(i++));
    imcMethods.put("4728754030119310155", new IfMC(i++));
    imcMethods.put("4728754030119344260", new IfMC(i++));
    imcMethods.put("4728754030119416753", new IfMC(i++));
    imcMethods.put("4728754030119477911", new IfMC(i++));
    imcMethods.put("4728754030115755833", new IfMC(i++));
    imcMethods.put("4728754030115757674", new IfMC(i++));
    imcMethods.put("4728754030115760484", new IfMC(i++));
    imcMethods.put("4728754030115736629", new IfMC(i++));
    imcMethods.put("4728754030115738470", new IfMC(i++));
    imcMethods.put("4728754030115742428", new IfMC(i++));
    imcMethods.put("4728754030115721121", new IfMC(i++));
    imcMethods.put("4728754030115724228", new IfMC(i++));
    imcMethods.put("4728754030115725141", new IfMC(i++));
    imcMethods.put("4728754030115726267", new IfMC(i++));
    imcMethods.put("4728754030115778031", new IfMC(i++));
    imcMethods.put("4728754030115781663", new IfMC(i++));
    imcMethods.put("4728754030115784533", new IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    IfMacroCondition query = identity.forTemplateNode(imcMethods);
    return (query != null ? query : super.getIfMacroCondition(identity));
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_1_0(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_1_1(ctx);
        case 2:
          return QueriesGenerated.ifMacro_Condition_1_2(ctx);
        case 3:
          return QueriesGenerated.ifMacro_Condition_1_3(ctx);
        case 4:
          return QueriesGenerated.ifMacro_Condition_1_4(ctx);
        case 5:
          return QueriesGenerated.ifMacro_Condition_1_5(ctx);
        case 6:
          return QueriesGenerated.ifMacro_Condition_1_6(ctx);
        case 7:
          return QueriesGenerated.ifMacro_Condition_1_7(ctx);
        case 8:
          return QueriesGenerated.ifMacro_Condition_3_0(ctx);
        case 9:
          return QueriesGenerated.ifMacro_Condition_3_1(ctx);
        case 10:
          return QueriesGenerated.ifMacro_Condition_3_2(ctx);
        case 11:
          return QueriesGenerated.ifMacro_Condition_3_3(ctx);
        case 12:
          return QueriesGenerated.ifMacro_Condition_3_4(ctx);
        case 13:
          return QueriesGenerated.ifMacro_Condition_3_5(ctx);
        case 14:
          return QueriesGenerated.ifMacro_Condition_3_6(ctx);
        case 15:
          return QueriesGenerated.ifMacro_Condition_3_7(ctx);
        case 16:
          return QueriesGenerated.ifMacro_Condition_3_8(ctx);
        case 17:
          return QueriesGenerated.ifMacro_Condition_3_9(ctx);
        case 18:
          return QueriesGenerated.ifMacro_Condition_3_10(ctx);
        case 19:
          return QueriesGenerated.ifMacro_Condition_3_11(ctx);
        case 20:
          return QueriesGenerated.ifMacro_Condition_3_12(ctx);
        case 21:
          return QueriesGenerated.ifMacro_Condition_3_13(ctx);
        case 22:
          return QueriesGenerated.ifMacro_Condition_3_14(ctx);
        case 23:
          return QueriesGenerated.ifMacro_Condition_3_15(ctx);
        case 24:
          return QueriesGenerated.ifMacro_Condition_3_16(ctx);
        case 25:
          return QueriesGenerated.ifMacro_Condition_3_17(ctx);
        case 26:
          return QueriesGenerated.ifMacro_Condition_3_18(ctx);
        case 27:
          return QueriesGenerated.ifMacro_Condition_4_0(ctx);
        case 28:
          return QueriesGenerated.ifMacro_Condition_4_1(ctx);
        case 29:
          return QueriesGenerated.ifMacro_Condition_4_2(ctx);
        case 30:
          return QueriesGenerated.ifMacro_Condition_6_0(ctx);
        case 31:
          return QueriesGenerated.ifMacro_Condition_6_1(ctx);
        case 32:
          return QueriesGenerated.ifMacro_Condition_6_2(ctx);
        case 33:
          return QueriesGenerated.ifMacro_Condition_7_0(ctx);
        case 34:
          return QueriesGenerated.ifMacro_Condition_7_1(ctx);
        case 35:
          return QueriesGenerated.ifMacro_Condition_7_2(ctx);
        case 36:
          return QueriesGenerated.ifMacro_Condition_7_3(ctx);
        case 37:
          return QueriesGenerated.ifMacro_Condition_9_0(ctx);
        case 38:
          return QueriesGenerated.ifMacro_Condition_9_1(ctx);
        case 39:
          return QueriesGenerated.ifMacro_Condition_9_2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("6630304389629592587", new RTQ(0, "HOME"));
    rtqMethods.put("4728754030119007113", new RTQ(1, "sample"));
    rtqMethods.put("4728754030119309367", new RTQ(2, "tmp"));
    rtqMethods.put("4728754030119415965", new RTQ(3, "tmp"));
    rtqMethods.put("4728754030115759614", new RTQ(4, "tmp"));
    rtqMethods.put("4728754030114742634", new RTQ(5, "tmp"));
    rtqMethods.put("4728754030115740419", new RTQ(6, "tmp"));
    rtqMethods.put("4728754030115716750", new RTQ(7, "tmp"));
    rtqMethods.put("4728754030115783642", new RTQ(8, "tmp"));
    rtqMethods.put("4728754030115797957", new RTQ(9, "tmp"));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    ReferenceTargetQuery query = queryKey.forTemplateNode(rtqMethods);
    return (query != null ? query : super.getReferenceTargetQuery(queryKey));
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_1_0(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_3_0(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_3_1(ctx);
        case 3:
          return QueriesGenerated.referenceMacro_GetReferent_3_2(ctx);
        case 4:
          return QueriesGenerated.referenceMacro_GetReferent_4_0(ctx);
        case 5:
          return QueriesGenerated.referenceMacro_GetReferent_5_0(ctx);
        case 6:
          return QueriesGenerated.referenceMacro_GetReferent_6_0(ctx);
        case 7:
          return QueriesGenerated.referenceMacro_GetReferent_7_0(ctx);
        case 8:
          return QueriesGenerated.referenceMacro_GetReferent_9_0(ctx);
        case 9:
          return QueriesGenerated.referenceMacro_GetReferent_10_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }
  private static boolean isEmptyString(String str) {
    return str == null || str.isEmpty();
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty default_path$K32T = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L, 0x3df50e09c640babdL, "default_path");
    /*package*/ static final SProperty duration$mi_f = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0xbed5e5797b645b9L, 0xbed5e5797b645bcL, "duration");
    /*package*/ static final SProperty trigger$DqFK = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde30cL, 0x5b6b060cf3fde310L, "trigger");
    /*package*/ static final SProperty default_number$JXbw = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L, 0x3df50e09c640bab9L, "default_number");
    /*package*/ static final SProperty number$M7Yy = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980ac8L, 0x6b5142eafcce13f1L, "number");
    /*package*/ static final SProperty info$rXd3 = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L, 0x25806c66fbe3905cL, "info");
    /*package*/ static final SProperty toolbar$qdja = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L, 0x366449915cdb5586L, "toolbar");
    /*package*/ static final SProperty isFinal$bKXT = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980ac8L, 0x420d89797f56bce4L, "isFinal");
    /*package*/ static final SProperty isFinal$cFSh = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980acbL, 0x420d89797f56bd37L, "isFinal");
    /*package*/ static final SProperty isFinal$jv5i = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980ac9L, 0x420d89797f56bde6L, "isFinal");
    /*package*/ static final SProperty isFinal$w2re = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x420d89797f0d16f6L, 0x420d89797f56bd93L, "isFinal");
    /*package*/ static final SProperty playback$XRxp = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde68dL, 0x25806c66fbe600f7L, "playback");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink timeout$r9ki = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L, 0xbed5e5797b645beL, "timeout");
    /*package*/ static final SReferenceLink event$pmgi = MetaAdapterFactory.getReferenceLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde68dL, 0x5b6b060cf3fe08f3L, "event");
    /*package*/ static final SContainmentLink Action$uVoi = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0xbed5e5797b645b9L, 0xbed5e5797d28d77L, "Action");
    /*package*/ static final SContainmentLink commands$oZIM = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde68dL, 0x5b6b060cf3fe08d2L, "commands");
    /*package*/ static final SContainmentLink bodyMenu$Of2I = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L, 0x5b6b060cf40204ebL, "bodyMenu");
    /*package*/ static final SContainmentLink activities$gAHC = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, 0x5b6b060cf3fde68aL, "activities");
    /*package*/ static final SContainmentLink events$gxkh = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, 0x5b6b060cf3fde688L, "events");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Activity$Oz = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde68dL, "jetbrains.mps.samples.VoiceMenu.structure.Activity");
    /*package*/ static final SConcept WorkSpace$A5 = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L, "jetbrains.mps.samples.VoiceMenu.structure.WorkSpace");
    /*package*/ static final SConcept Replay$Q_ = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x6b5142eafd54f3f9L, "jetbrains.mps.samples.VoiceMenu.structure.Replay");
    /*package*/ static final SConcept Back$$j = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980acaL, "jetbrains.mps.samples.VoiceMenu.structure.Back");
    /*package*/ static final SConcept DirectCall$zl = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980ac8L, "jetbrains.mps.samples.VoiceMenu.structure.DirectCall");
    /*package*/ static final SConcept GetInfo$$M = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980acbL, "jetbrains.mps.samples.VoiceMenu.structure.GetInfo");
    /*package*/ static final SConcept Other$zO = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d1339980ac9L, "jetbrains.mps.samples.VoiceMenu.structure.Other");
    /*package*/ static final SConcept Record$xQ = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x420d89797f0d16f6L, "jetbrains.mps.samples.VoiceMenu.structure.Record");
    /*package*/ static final SConcept Menu$By = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, "jetbrains.mps.samples.VoiceMenu.structure.Menu");
    /*package*/ static final SConcept Action$AN = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5dfe7d133997fdc5L, "jetbrains.mps.samples.VoiceMenu.structure.Action");
  }
}
