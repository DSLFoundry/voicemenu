package VoiceMenuTest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAssert = createDescriptorForAssert();
  /*package*/ final ConceptDescriptor myConceptCommand = createDescriptorForCommand();
  /*package*/ final ConceptDescriptor myConceptEmptyLine = createDescriptorForEmptyLine();
  /*package*/ final ConceptDescriptor myConceptPress = createDescriptorForPress();
  /*package*/ final ConceptDescriptor myConceptStepEvaluation = createDescriptorForStepEvaluation();
  /*package*/ final ConceptDescriptor myConceptTestStep = createDescriptorForTestStep();
  /*package*/ final ConceptDescriptor myConceptVoiceMenuTestCase = createDescriptorForVoiceMenuTestCase();
  /*package*/ final EnumerationDescriptor myEnumerationOutcome = new EnumerationDescriptor_Outcome();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeEventId = new ConstrainedStringDatatypeDescriptorImpl(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e388704c45L, "EventId", "r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289632275525", "[#|*|0-9]");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAssert, myConceptCommand, myConceptEmptyLine, myConceptPress, myConceptStepEvaluation, myConceptTestStep, myConceptVoiceMenuTestCase);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Assert:
        return myConceptAssert;
      case LanguageConceptSwitch.Command:
        return myConceptCommand;
      case LanguageConceptSwitch.EmptyLine:
        return myConceptEmptyLine;
      case LanguageConceptSwitch.Press:
        return myConceptPress;
      case LanguageConceptSwitch.StepEvaluation:
        return myConceptStepEvaluation;
      case LanguageConceptSwitch.TestStep:
        return myConceptTestStep;
      case LanguageConceptSwitch.VoiceMenuTestCase:
        return myConceptVoiceMenuTestCase;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationOutcome, myCSDatatypeEventId);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAssert() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("VoiceMenuTest", "Assert", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887030a6L);
    b.class_(false, false, false);
    b.super_("VoiceMenuTest.structure.TestStep", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc0fL);
    b.origin("r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289632268454");
    b.version(2);
    b.associate("expectedEvent", 0x72ec05e38870a891L).target(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde30cL).optional(false).origin("8281000289632299153").done();
    b.alias("assert");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("VoiceMenuTest", "Command", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887c9e10L);
    b.class_(false, true, false);
    b.origin("r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289633082896");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("VoiceMenuTest", "EmptyLine", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887c9e0fL);
    b.class_(false, false, false);
    b.super_("VoiceMenuTest.structure.Command", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887c9e10L);
    b.origin("r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289633082895");
    b.version(2);
    b.alias("<empty line>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPress() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("VoiceMenuTest", "Press", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc11L);
    b.class_(false, false, false);
    b.super_("VoiceMenuTest.structure.TestStep", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc0fL);
    b.origin("r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289632123921");
    b.version(2);
    b.property("key", 0x72ec05e3887030a4L).type(MetaIdFactory.dataTypeId(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e388704c45L)).origin("8281000289632268452").done();
    b.alias("press");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStepEvaluation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("VoiceMenuTest", "StepEvaluation", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc10L);
    b.class_(false, false, false);
    b.origin("r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289632123920");
    b.version(2);
    b.property("result", 0x72ec05e3886dfc1bL).type(MetaIdFactory.dataTypeId(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc12L)).origin("8281000289632123931").done();
    b.property("message", 0x72ec05e3886dfc1dL).type(PrimitiveTypeId.STRING).origin("8281000289632123933").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestStep() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("VoiceMenuTest", "TestStep", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc0fL);
    b.class_(false, true, false);
    b.super_("VoiceMenuTest.structure.Command", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887c9e10L);
    b.origin("r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289632123919");
    b.version(2);
    b.aggregate("evaluation", 0x72ec05e3886dfc64L).target(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc10L).optional(false).ordered(true).multiple(false).origin("8281000289632124004").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVoiceMenuTestCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("VoiceMenuTest", "VoiceMenuTestCase", 0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3886dfc0cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9b5fab12-3317-4915-baca-42b08fc481a5(VoiceMenuTest.structure)/8281000289632123916");
    b.version(2);
    b.associate("workspaceToTest", 0x72ec05e388705231L).target(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf40204c8L).optional(false).origin("8281000289632277041").done();
    b.aggregate("commands", 0x72ec05e38870528cL).target(0x25057fc953374f2eL, 0x9703a17097079193L, 0x72ec05e3887c9e10L).optional(true).ordered(true).multiple(true).origin("8281000289632277132").done();
    b.alias("Voice Menu Test Case");
    return b.create();
  }
}
