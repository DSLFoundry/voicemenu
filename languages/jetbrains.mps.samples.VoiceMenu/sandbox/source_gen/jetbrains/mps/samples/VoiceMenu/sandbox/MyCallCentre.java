package jetbrains.mps.samples.VoiceMenu.sandbox;

/*Generated by MPS */

import java.awt.event.ActionListener;
import JavaVoiceMenu.runtime.Event;
import JavaVoiceMenu.runtime.Variables;
import java.util.ArrayList;
import JavaVoiceMenu.runtime.Style;
import JavaVoiceMenu.runtime.Behaviour;
import java.awt.BorderLayout;
import javax.swing.JPanel;
import JavaVoiceMenu.runtime.Data;
import javax.swing.JButton;
import java.awt.Dimension;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import java.awt.Color;
import java.awt.event.ActionEvent;

public class MyCallCentre implements ActionListener {


  public static MyCallCentre instance;

  public static void initHashMap() {
    // Workspace -> Menu 
    String myPath = "0";

    {
      Event Vozovy_park = new Event("Vozovy_park", "2");

      Vozovy_park.setGreeting("Vitejte ve Vozovem parku");

      Variables.path = Variables.path + Vozovy_park.trigger;
      Variables.myHashMap.put(Variables.path, Vozovy_park);


      {
        Event Moje_Auto = new Event("Moje_Auto", "3");


        Variables.path = Variables.path + Moje_Auto.trigger;
        Variables.myHashMap.put(Variables.path, Moje_Auto);

        Moje_Auto.setAction("call");

        Variables.path.substring(0, Variables.path.length() - 1);

        Moje_Auto.childs = new ArrayList<Event>();



      }
      Variables.path.substring(0, Variables.path.length() - 1);

      Vozovy_park.childs = new ArrayList<Event>();

      Vozovy_park.childs.add();


    }
  }

  public static void main(String[] args) {
    initHashMap();
    Style.main_Greeting = "";
    MyCallCentre.initHashMap();
    Behaviour.runInitSetup();
  }

  public static void initView() {
    Style.setContent();
    Style.myPhone.add(Style.myPanelOfButtons, BorderLayout.SOUTH);
    Style.setFrame();
  }

  public static void addButtons(JPanel myPanelOfButtons) {
    for (Data.Status item : Data.Status.values()) {
      JButton button = new JButton(item.getCode());
      button.setActionCommand(item.getCode());
      button.addActionListener(instance);
      button.setPreferredSize(new Dimension(78, 76));
      Border border = new LineBorder(Color.white, 13);
      button.setBorder(border);
      myPanelOfButtons.add(button);
    }
  }
  @Override
  public void actionPerformed(ActionEvent event) {
    if (!((Variables.path != null && Variables.path.length() > 0))) {
      Behaviour.runLogic(event);
    }
  }

}
