package jetbrains.mps.samples.VoiceMenu.sandbox;

/*Generated by MPS */

import java.awt.event.ActionListener;
import JavaVoiceMenu.runtime.Event;
import java.util.ArrayList;
import JavaVoiceMenu.runtime.Variables;
import JavaVoiceMenu.runtime.Behaviour;
import JavaVoiceMenu.runtime.Style;
import java.awt.BorderLayout;
import javax.swing.JPanel;
import JavaVoiceMenu.runtime.Data;
import javax.swing.JButton;
import java.awt.Dimension;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import java.awt.Color;
import java.awt.event.ActionEvent;
import JavaVoiceMenu.runtime.MacVoice;
import java.io.IOException;

public class Connectivity_provider_ implements ActionListener {


  public static Connectivity_provider_ instance;

  public static void initHashMap() {

    Event Home = new Event("Connectivity provider", "0");
    Home.setAction("", true);
    Home.setGreeting("Welcome to " + "Connectivity provider");

    Home.setGreeting("Welcome to our voicemenu");
    Home.childs = new ArrayList<Event>();
    Home.isFinal = false;
    Variables.main_Text = "Connectivity provider";

    Variables.myHashMap.put("0", Home);


    Event Internet_azlqml_a0 = new Event("Internet", "1");
    Internet_azlqml_a0.isFinal = false;
    Internet_azlqml_a0.setAction("", false);
    Internet_azlqml_a0.setGreeting("");
    Internet_azlqml_a0.playback = "Welcome to the Internet";
    Internet_azlqml_a0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("01", Internet_azlqml_a0);
    Event Speed_up_azlqml_a0a0 = new Event("Speed up", "1");
    Speed_up_azlqml_a0a0.isFinal = false;
    Speed_up_azlqml_a0a0.setAction("", false);
    Speed_up_azlqml_a0a0.setGreeting("");
    Speed_up_azlqml_a0a0.playback = "Increasing speed was chosen";
    Speed_up_azlqml_a0a0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("011", Speed_up_azlqml_a0a0);
    Speed_up_azlqml_a0a0.setAction("getInfo", false);
    Speed_up_azlqml_a0a0.childs = new ArrayList<Event>();
    Event Discount_azlqml_b0a0 = new Event("Discount", "2");
    Discount_azlqml_b0a0.isFinal = false;
    Discount_azlqml_b0a0.setAction("", false);
    Discount_azlqml_b0a0.setGreeting("");
    Discount_azlqml_b0a0.playback = "Great choice!";
    Discount_azlqml_b0a0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("012", Discount_azlqml_b0a0);
    Event Big_Discount_azlqml_b0b0a0 = new Event("Big Discount", "1");
    Big_Discount_azlqml_b0b0a0.isFinal = false;
    Big_Discount_azlqml_b0b0a0.setAction("", false);
    Big_Discount_azlqml_b0b0a0.setGreeting("");
    Big_Discount_azlqml_b0b0a0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("0121", Big_Discount_azlqml_b0b0a0);
    Big_Discount_azlqml_b0b0a0.setAction("call", true);
    Big_Discount_azlqml_b0b0a0.childs = new ArrayList<Event>();
    Event Small_Discount_azlqml_a0b0a0 = new Event("Small Discount", "2");
    Small_Discount_azlqml_a0b0a0.isFinal = false;
    Small_Discount_azlqml_a0b0a0.setAction("", false);
    Small_Discount_azlqml_a0b0a0.setGreeting("");
    Small_Discount_azlqml_a0b0a0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("0122", Small_Discount_azlqml_a0b0a0);
    Small_Discount_azlqml_a0b0a0.setAction("call", false);
    Small_Discount_azlqml_a0b0a0.childs = new ArrayList<Event>();
    Event Going_Back_azlqml_d0b0a0 = new Event("Going Back", "#");
    Going_Back_azlqml_d0b0a0.isFinal = false;
    Going_Back_azlqml_d0b0a0.setAction("", false);
    Going_Back_azlqml_d0b0a0.setGreeting("");
    Going_Back_azlqml_d0b0a0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("012#", Going_Back_azlqml_d0b0a0);
    Going_Back_azlqml_d0b0a0.setAction("back", false);
    Going_Back_azlqml_d0b0a0.childs = new ArrayList<Event>();
    Event Going_Back_azlqml_c0b0a0 = new Event("Going Back", "*");
    Going_Back_azlqml_c0b0a0.isFinal = false;
    Going_Back_azlqml_c0b0a0.setAction("", false);
    Going_Back_azlqml_c0b0a0.setGreeting("");
    Going_Back_azlqml_c0b0a0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("012*", Going_Back_azlqml_c0b0a0);
    Going_Back_azlqml_c0b0a0.setAction("back", false);
    Going_Back_azlqml_c0b0a0.childs = new ArrayList<Event>();
    Discount_azlqml_b0a0.childs = new ArrayList<Event>();
    Discount_azlqml_b0a0.childs.add(Small_Discount_azlqml_a0b0a0);
    Discount_azlqml_b0a0.childs.add(Big_Discount_azlqml_b0b0a0);
    Discount_azlqml_b0a0.childs.add(Going_Back_azlqml_c0b0a0);
    Discount_azlqml_b0a0.childs.add(Going_Back_azlqml_d0b0a0);
    Internet_azlqml_a0.childs = new ArrayList<Event>();
    Internet_azlqml_a0.childs.add(Speed_up_azlqml_a0a0);
    Internet_azlqml_a0.childs.add(Discount_azlqml_b0a0);
    Event Television_azlqml_b0 = new Event("Television", "2");
    Television_azlqml_b0.isFinal = false;
    Television_azlqml_b0.setAction("", false);
    Television_azlqml_b0.setGreeting("");
    Television_azlqml_b0.childs = new ArrayList<Event>();
    Variables.myHashMap.put("02", Television_azlqml_b0);
    Television_azlqml_b0.setAction("other", true);
    Television_azlqml_b0.childs = new ArrayList<Event>();

    Home.childs.add(Internet_azlqml_a0);
    Home.childs.add(Television_azlqml_b0);


    Variables.timeout = new Event("timeout", "X");
    Variables.timeout.playback = "";
    Variables.timeout.duration = 0;
    Variables.timeout.action = "replay";
    Variables.timeout.isFinal = false;
  }

  public static void main(String[] args) {
    initHashMap();
    instance = new Connectivity_provider_();
    Connectivity_provider_.initHashMap();
    initView();
    Behaviour.runInitSetup();

  }

  public static void initView() {
    Style.setContent();
    addButtons(Style.myPanelOfButtons);
    Style.myPhone.add(Style.myPanelOfButtons, BorderLayout.SOUTH);
    Style.setFrame();
  }

  public static void addButtons(JPanel myPanelOfButtons) {
    for (Data.Status item : Data.Status.values()) {
      JButton button = new JButton(item.getCode());
      button.setActionCommand(item.getCode());
      button.addActionListener(instance);
      button.setPreferredSize(new Dimension(78, 76));
      Border border = new LineBorder(Color.white, 13);
      button.setBorder(border);
      myPanelOfButtons.add(button);
    }
  }
  @Override
  public void actionPerformed(ActionEvent event) {
    if (!(((Variables.path == null || Variables.path.length() == 0) || Variables.finished == true || Variables.started == false))) {
      try {
        if (Variables.timerThr.isAlive()) {
          Variables.timerThr.interrupt();
        }
        try {
          if (MacVoice.waitingThr.isAlive()) {
            MacVoice.waitingThr.interrupt();
          }
        } catch (Exception e) {
        }
        Behaviour.runLogic(event, false);

      } catch (IOException e) {
        e.printStackTrace();
      }


    }
  }

}
