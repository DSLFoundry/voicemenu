package jetbrains.mps.samples.VoiceMenu.sandbox;

/*Generated by MPS */

import java.awt.event.ActionListener;
import JavaVoiceMenu.runtime.Event;
import JavaVoiceMenu.runtime.Variables;
import java.util.ArrayList;
import JavaVoiceMenu.runtime.Style;
import JavaVoiceMenu.runtime.Behaviour;
import java.awt.BorderLayout;
import javax.swing.JPanel;
import JavaVoiceMenu.runtime.Data;
import javax.swing.JButton;
import java.awt.Dimension;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import java.awt.Color;
import java.awt.event.ActionEvent;

public class Call_Center implements ActionListener {


  public static Call_Center instance;

  public static void initHashMap() {
    // Workspace -> Menu 
    String myPath = "0";

    {
      Event Internet = new Event("Internet", "1");


      Variables.path = Variables.path + Internet.trigger;
      Variables.myHashMap.put(Variables.path, Internet);


      {
        Event Bonus = new Event("Bonus", "2");

        Bonus.setGreeting("Did you know that we have also bonuses?");

        Variables.path = Variables.path + Bonus.trigger;
        Variables.myHashMap.put(Variables.path, Bonus);


        {
          Event Tarifs = new Event("Tarifs", "1");


          Variables.path = Variables.path + Tarifs.trigger;
          Variables.myHashMap.put(Variables.path, Tarifs);

          Tarifs.setAction("call");

          Variables.path.substring(0, Variables.path.length() - 1);

          Tarifs.childs = new ArrayList<Event>();



        }
        {
          Event Back = new Event("Back", "#");


          Variables.path = Variables.path + Back.trigger;
          Variables.myHashMap.put(Variables.path, Back);

          Back.setAction("back");

          Variables.path.substring(0, Variables.path.length() - 1);

          Back.childs = new ArrayList<Event>();



        }
        Variables.path.substring(0, Variables.path.length() - 1);

        Bonus.childs = new ArrayList<Event>();

        Bonus.childs.add();
        Bonus.childs.add();


      }
      Variables.path.substring(0, Variables.path.length() - 1);

      Internet.childs = new ArrayList<Event>();

      Internet.childs.add();
      Internet.childs.add();
      Internet.childs.add();


    }
    {
      Event News = new Event("News", "2");


      Variables.path = Variables.path + News.trigger;
      Variables.myHashMap.put(Variables.path, News);


      {
        Event Hot_News = new Event("Hot_News", "1");


        Variables.path = Variables.path + Hot_News.trigger;
        Variables.myHashMap.put(Variables.path, Hot_News);


        {
          Event Direct_call = new Event("Direct_call", "1");

          Direct_call.setGreeting("Wait please and relax you will be connected soon!!");

          Variables.path = Variables.path + Direct_call.trigger;
          Variables.myHashMap.put(Variables.path, Direct_call);

          Direct_call.setAction("call");

          Variables.path.substring(0, Variables.path.length() - 1);

          Direct_call.childs = new ArrayList<Event>();



        }
        {
          Event Daily_bonus = new Event("Daily_bonus", "2");


          Variables.path = Variables.path + Daily_bonus.trigger;
          Variables.myHashMap.put(Variables.path, Daily_bonus);

          Daily_bonus.setAction("get info");

          Variables.path.substring(0, Variables.path.length() - 1);

          Daily_bonus.childs = new ArrayList<Event>();



        }
        {
          Event Back = new Event("Back", "4");


          Variables.path = Variables.path + Back.trigger;
          Variables.myHashMap.put(Variables.path, Back);

          Back.setAction("back");

          Variables.path.substring(0, Variables.path.length() - 1);

          Back.childs = new ArrayList<Event>();



        }
        Variables.path.substring(0, Variables.path.length() - 1);

        Hot_News.childs = new ArrayList<Event>();

        Hot_News.childs.add();
        Hot_News.childs.add();
        Hot_News.childs.add();


      }
      {
        Event Hot_News = new Event("Hot_News", "1");


        Variables.path = Variables.path + Hot_News.trigger;
        Variables.myHashMap.put(Variables.path, Hot_News);

        Hot_News.setAction("get info");

        Variables.path.substring(0, Variables.path.length() - 1);

        Hot_News.childs = new ArrayList<Event>();



      }
      Variables.path.substring(0, Variables.path.length() - 1);

      News.childs = new ArrayList<Event>();

      News.childs.add();


    }
    {
      Event Calls = new Event("Calls", "3");


      Variables.path = Variables.path + Calls.trigger;
      Variables.myHashMap.put(Variables.path, Calls);


      {
        Event Free_calls = new Event("Free_calls", "1");


        Variables.path = Variables.path + Free_calls.trigger;
        Variables.myHashMap.put(Variables.path, Free_calls);

        Free_calls.setAction("other");

        Variables.path.substring(0, Variables.path.length() - 1);

        Free_calls.childs = new ArrayList<Event>();



      }
      Variables.path.substring(0, Variables.path.length() - 1);

      Calls.childs = new ArrayList<Event>();

      Calls.childs.add();


    }
  }

  public static void main(String[] args) {
    initHashMap();
    Style.main_Greeting = "Welcome to Call_Center";
    Call_Center.initHashMap();
    Behaviour.runInitSetup();
  }

  public static void initView() {
    Style.setContent();
    Style.myPhone.add(Style.myPanelOfButtons, BorderLayout.SOUTH);
    Style.setFrame();
  }

  public static void addButtons(JPanel myPanelOfButtons) {
    for (Data.Status item : Data.Status.values()) {
      JButton button = new JButton(item.getCode());
      button.setActionCommand(item.getCode());
      button.addActionListener(instance);
      button.setPreferredSize(new Dimension(78, 76));
      Border border = new LineBorder(Color.white, 13);
      button.setBorder(border);
      myPanelOfButtons.add(button);
    }
  }
  @Override
  public void actionPerformed(ActionEvent event) {
    if (!((Variables.path != null && Variables.path.length() > 0))) {
      Behaviour.runLogic(event);
    }
  }

}
