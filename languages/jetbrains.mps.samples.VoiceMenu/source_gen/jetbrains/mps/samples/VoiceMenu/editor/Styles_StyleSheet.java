package jetbrains.mps.samples.VoiceMenu.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.style.AbstractStyleClass;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.editor.runtime.descriptor.EditorBuilderEnvironment;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.editor.runtime.style.ShowBoundariesArea;
import jetbrains.mps.nodeEditor.EditorSettings;
import java.awt.Color;

public class Styles_StyleSheet {
  public static class ArrowsStyleClass extends AbstractStyleClass {
    public ArrowsStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public ArrowsStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.black));
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
      style.set(StyleAttributes.SHOW_BOUNDARIES_IN, ShowBoundariesArea.GUTTER);
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a3a());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a3a() {
      return (EditorSettings.getInstance().getFontSize() * 120 / 100);
    }
  }
  public static class HeadingStyleClass extends AbstractStyleClass {
    public HeadingStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public HeadingStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.DARK_BLUE));
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.AUTO_DELETABLE, true);
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a3b());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a3b() {
      return (EditorSettings.getInstance().getFontSize() * 180 / 100);
    }
  }
  public static class ActionStyleClass extends AbstractStyleClass {
    public ActionStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public ActionStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.black));
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
      style.set(StyleAttributes.SHOW_BOUNDARIES_IN, ShowBoundariesArea.GUTTER);
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a3c());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a3c() {
      return (EditorSettings.getInstance().getFontSize() * 110 / 100);
    }
  }
  public static class HardCodedTextStyleClass extends AbstractStyleClass {
    public HardCodedTextStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public HardCodedTextStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.darkGray));
      style.set(StyleAttributes.SHOW_BOUNDARIES_IN, ShowBoundariesArea.GUTTER);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a3d());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a3d() {
      return (EditorSettings.getInstance().getFontSize() * 120 / 100);
    }
  }
  public static class UserWrittenTextStyleClass extends AbstractStyleClass {
    public UserWrittenTextStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public UserWrittenTextStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.SHOW_BOUNDARIES_IN, ShowBoundariesArea.GUTTER);
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.black));
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a3e());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a3e() {
      return (EditorSettings.getInstance().getFontSize() * 140 / 100);
    }
  }
  public static class DeclarationsStyleClass extends AbstractStyleClass {
    public DeclarationsStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public DeclarationsStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.SHOW_BOUNDARIES_IN, ShowBoundariesArea.GUTTER);
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.DARK_MAGENTA));
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a2f());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a2f() {
      return (EditorSettings.getInstance().getFontSize() * 140 / 100);
    }
  }
  public static class EmptyCellStyleClass extends AbstractStyleClass {
    public EmptyCellStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public EmptyCellStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a0g());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a0g() {
      return (EditorSettings.getInstance().getFontSize() * 120 / 100);
    }
  }
  public static class BracketsStyleClass extends AbstractStyleClass {
    public BracketsStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public BracketsStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.SHOW_BOUNDARIES_IN, ShowBoundariesArea.GUTTER);
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a1h());
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a1h() {
      return (EditorSettings.getInstance().getFontSize() * 100 / 100);
    }
  }
  public static class GreetingStyleClass extends AbstractStyleClass {
    public GreetingStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public GreetingStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.SHOW_BOUNDARIES_IN, ShowBoundariesArea.GUTTER);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
      style.set(StyleAttributes.FONT_SIZE, _StyleParameter_QueryFunction_kkd5s1_a2i());
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(new Color(11514923)));
      style.set(StyleAttributes.NULL_TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.gray));
    }

    private int _StyleParameter_QueryFunction_kkd5s1_a2i() {
      return (EditorSettings.getInstance().getFontSize() * 110 / 100);
    }
  }
}
