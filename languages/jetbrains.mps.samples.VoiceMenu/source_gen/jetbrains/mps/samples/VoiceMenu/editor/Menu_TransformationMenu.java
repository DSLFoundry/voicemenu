package jetbrains.mps.samples.VoiceMenu.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import jetbrains.mps.lang.editor.menus.EditorMenuDescriptorBase;
import jetbrains.mps.smodel.SNodePointer;
import java.util.List;
import jetbrains.mps.editor.contextActionsTool.lang.menus.runtime.MenuLocations;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.transformation.DefaultConceptMenusTransformationMenuPart;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.lang.editor.menus.transformation.SubMenuMenuTransformationMenuPart;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.lang.editor.menus.transformation.ActionItemBase;
import jetbrains.mps.editor.contextActionsTool.lang.menus.runtime.SidebarActionItem;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;
import jetbrains.mps.openapi.editor.selection.SelectionManager;
import jetbrains.mps.smodel.runtime.IconResource;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Objects;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SProperty;

public class Menu_TransformationMenu extends TransformationMenuBase {
  public Menu_TransformationMenu() {
    super(false, new EditorMenuDescriptorBase("default transformation menu for " + "Menu", new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "6198827212360090600")), List.<String>of(MenuLocations.CONTEXT_ACTIONS_TOOL, MenuLocations.CONTEXT_ACTIONS_TOOL, MenuLocations.CONTEXT_ACTIONS_TOOL, MenuLocations.CONTEXT_ACTIONS_TOOL));
  }

  @Override
  @NotNull
  protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts(TransformationMenuContext _context) {
    List<MenuPart<TransformationMenuItem, TransformationMenuContext>> result = new ArrayList<MenuPart<TransformationMenuItem, TransformationMenuContext>>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), MenuLocations.CONTEXT_ACTIONS_TOOL).contains(_context.getMenuLocation())) {
      result.add(new DefaultConceptMenusTransformationMenuPart(SModelUtil.getDirectSuperConcepts(CONCEPTS.Menu$By)) {
        @NotNull
        @Override
        public List<TransformationMenuItem> createItems(@NotNull TransformationMenuContext context) {
          context.getEditorMenuTrace().pushTraceInfo();
          context.getEditorMenuTrace().setDescriptor(new EditorMenuDescriptorBase("include menus for all the direct superconcepts of " + "Menu", new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "4660170996524985542")));
          try {
            return super.createItems(context);
          } finally {
            context.getEditorMenuTrace().popTraceInfo();
          }
        }

      });
    }
    if (ListSequence.fromListAndArray(new ArrayList<String>(), MenuLocations.CONTEXT_ACTIONS_TOOL).contains(_context.getMenuLocation())) {
      result.add(new TMP_SubMenu_caopkk_a1());
    }
    if (ListSequence.fromListAndArray(new ArrayList<String>(), MenuLocations.CONTEXT_ACTIONS_TOOL).contains(_context.getMenuLocation())) {
      result.add(new TMP_SubMenu_caopkk_a2());
    }
    if (ListSequence.fromListAndArray(new ArrayList<String>(), MenuLocations.CONTEXT_ACTIONS_TOOL).contains(_context.getMenuLocation())) {
      result.add(new TMP_Action_caopkk_a3());
    }
    return result;
  }

  public class TMP_SubMenu_caopkk_a1 extends SubMenuMenuTransformationMenuPart {
    @Override
    protected String getText(TransformationMenuContext _context) {
      return "Appearance";
    }

    @NotNull
    @Override
    public TransformationMenuItem createItem(@NotNull TransformationMenuContext context) {
      String description;
      try {
        description = "submenu " + getText(context);
      } catch (Throwable t) {
        return super.createItem(context);
      }
      context.getEditorMenuTrace().pushTraceInfo();
      context.getEditorMenuTrace().setDescriptor(new EditorMenuDescriptorBase(description, new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "8517997849283717537")));
      try {
        return super.createItem(context);
      } finally {
        context.getEditorMenuTrace().popTraceInfo();
      }
    }


    @Override
    protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts() {
      return Arrays.<MenuPart<TransformationMenuItem, TransformationMenuContext>>asList(new TMP_Action_caopkk_a0b(), new TMP_Action_caopkk_b0b());
    }
    private class TMP_Action_caopkk_a0b extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
      @Nullable
      protected TransformationMenuItem createItem(TransformationMenuContext context) {
        return new Item(context).resetTraceInfo();
      }

      private class Item extends ActionItemBase implements SidebarActionItem {
        /*package*/ Item(TransformationMenuContext context) {
          super(context);
        }
        /*package*/ Item resetTraceInfo() {
          updateTraceInfo("single item: " + getLabelText(""), new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "8517997849283986877"));
          return this;
        }
        @Nullable
        @Override
        public String getLabelText(String pattern) {
          return "Sort Ascending";
        }

        @Override
        public void execute(@NotNull String pattern) {
          List<SNode> list = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.events$gxkh)).sort((it) -> SPropertyOperations.getString(it, PROPS.trigger$DqFK), true).toList();
          for (SNode item : ListSequence.fromList(list)) {
            ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.events$gxkh)).addElement(item);
          }
          SelectionUtil.selectCell(_context.getEditorContext(), _context.getNode(), SelectionManager.FIRST_ERROR_CELL + "|" + SelectionManager.FOCUS_POLICY_CELL + "|" + SelectionManager.FIRST_EDITABLE_CELL + "|" + SelectionManager.FIRST_CELL);

        }


        @Override
        public IconResource getIcon() {
          return IconContainer.RESOURCE_17;
        }
        @Override
        public String getTooltipText() {
          return null;
        }

      }
    }
    private class TMP_Action_caopkk_b0b extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
      @Nullable
      protected TransformationMenuItem createItem(TransformationMenuContext context) {
        return new Item(context).resetTraceInfo();
      }

      private class Item extends ActionItemBase implements SidebarActionItem {
        /*package*/ Item(TransformationMenuContext context) {
          super(context);
        }
        /*package*/ Item resetTraceInfo() {
          updateTraceInfo("single item: " + getLabelText(""), new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "8517997849283720569"));
          return this;
        }
        @Nullable
        @Override
        public String getLabelText(String pattern) {
          return "Sort Descending";
        }

        @Override
        public void execute(@NotNull String pattern) {
          List<SNode> list = ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.events$gxkh)).sort((it) -> SPropertyOperations.getString(it, PROPS.trigger$DqFK), false).toList();
          for (SNode item : ListSequence.fromList(list)) {
            ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.events$gxkh)).addElement(item);
          }
          SelectionUtil.selectCell(_context.getEditorContext(), _context.getNode(), SelectionManager.FIRST_ERROR_CELL + "|" + SelectionManager.FOCUS_POLICY_CELL + "|" + SelectionManager.FIRST_EDITABLE_CELL + "|" + SelectionManager.FIRST_CELL);

        }


        @Override
        public IconResource getIcon() {
          return IconContainer.RESOURCE_18;
        }
        @Override
        public String getTooltipText() {
          return null;
        }

      }
    }
  }
  public class TMP_SubMenu_caopkk_a2 extends SubMenuMenuTransformationMenuPart {
    @Override
    protected String getText(TransformationMenuContext _context) {
      return "Options";
    }

    @NotNull
    @Override
    public TransformationMenuItem createItem(@NotNull TransformationMenuContext context) {
      String description;
      try {
        description = "submenu " + getText(context);
      } catch (Throwable t) {
        return super.createItem(context);
      }
      context.getEditorMenuTrace().pushTraceInfo();
      context.getEditorMenuTrace().setDescriptor(new EditorMenuDescriptorBase(description, new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "6198827212365002661")));
      try {
        return super.createItem(context);
      } finally {
        context.getEditorMenuTrace().popTraceInfo();
      }
    }


    @Override
    protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts() {
      return Arrays.<MenuPart<TransformationMenuItem, TransformationMenuContext>>asList(new TMP_Action_caopkk_a0c());
    }
    private class TMP_Action_caopkk_a0c extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
      @Nullable
      protected TransformationMenuItem createItem(TransformationMenuContext context) {
        return new Item(context).resetTraceInfo();
      }

      private class Item extends ActionItemBase implements SidebarActionItem {
        /*package*/ Item(TransformationMenuContext context) {
          super(context);
        }
        /*package*/ Item resetTraceInfo() {
          updateTraceInfo("single item: " + getLabelText(""), new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "6198827212365002699"));
          return this;
        }
        @Nullable
        @Override
        public String getLabelText(String pattern) {
          return "Add new Event";
        }

        @Override
        public void execute(@NotNull String pattern) {
          SNode newEvent = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde30cL, "jetbrains.mps.samples.VoiceMenu.structure.Event"));

          ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.events$gxkh)).addElement(newEvent);
        }


        @Override
        public IconResource getIcon() {
          return IconContainer.RESOURCE_19;
        }
        @Override
        public String getTooltipText() {
          return null;
        }

      }
    }
  }
  private class TMP_Action_caopkk_a3 extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
    @Nullable
    protected TransformationMenuItem createItem(TransformationMenuContext context) {
      return new Item(context).resetTraceInfo();
    }

    private class Item extends ActionItemBase implements SidebarActionItem {
      /*package*/ Item(TransformationMenuContext context) {
        super(context);
      }
      /*package*/ Item resetTraceInfo() {
        updateTraceInfo("single item: " + getLabelText(""), new SNodePointer("r:7c1e5bbb-2d18-4cf3-a11d-502be6b13261(jetbrains.mps.samples.VoiceMenu.editor)", "5283568769197469293"));
        return this;
      }
      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "Remove Activity";
      }

      @Override
      public void execute(@NotNull String pattern) {
        Iterable<SNode> activities = SLinkOperations.getChildren(_context.getNode(), LINKS.activities$gAHC);
        for (final SNode currentActvt : Sequence.fromIterable(activities)) {
          if (Sequence.fromIterable(activities).any((it) -> !(Objects.equals(it, currentActvt)) && Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(it, LINKS.event$pmgi), PROPS.trigger$DqFK), SPropertyOperations.getString(SLinkOperations.getTarget(currentActvt, LINKS.event$pmgi), PROPS.trigger$DqFK)))) {
            SNodeOperations.deleteNode(currentActvt);
          }
        }
      }

      @Override
      public boolean canExecute(@NotNull String pattern) {
        Iterable<SNode> activities = SLinkOperations.getChildren(_context.getNode(), LINKS.activities$gAHC);
        for (final SNode currentActvt : Sequence.fromIterable(activities)) {
          if (Sequence.fromIterable(activities).any((it) -> !(Objects.equals(it, currentActvt)) && Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(it, LINKS.event$pmgi), PROPS.trigger$DqFK), SPropertyOperations.getString(SLinkOperations.getTarget(currentActvt, LINKS.event$pmgi), PROPS.trigger$DqFK)))) {
            return true;
          }
        }
        return false;
      }

      @Override
      public IconResource getIcon() {
        return IconContainer.RESOURCE_20;
      }
      @Override
      public String getTooltipText() {
        return null;
      }

    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Menu$By = MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, "jetbrains.mps.samples.VoiceMenu.structure.Menu");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink events$gxkh = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, 0x5b6b060cf3fde688L, "events");
    /*package*/ static final SContainmentLink activities$gAHC = MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, 0x5b6b060cf3fde68aL, "activities");
    /*package*/ static final SReferenceLink event$pmgi = MetaAdapterFactory.getReferenceLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde68dL, 0x5b6b060cf3fe08f3L, "event");
  }

  private static final class PROPS {
    /*package*/ static final SProperty trigger$DqFK = MetaAdapterFactory.getProperty(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde30cL, 0x5b6b060cf3fde310L, "trigger");
  }
}
