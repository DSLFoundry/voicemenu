package jetbrains.mps.samples.VoiceMenu.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class RemoveEventAndActivity {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new RemoveEventAndActivity.RemoveEventAndActivity_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new RemoveEventAndActivity.RemoveEventAndActivity_BACKSPACE(node));
  }
  public static class RemoveEventAndActivity_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public RemoveEventAndActivity_DELETE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, final SNode node) {

      for (SNode item : ListSequence.fromList(SNodeOperations.getAllSiblings(node, false))) {
        SNodeOperations.deleteNode(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, "jetbrains.mps.samples.VoiceMenu.structure.Menu")), MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, 0x5b6b060cf3fde68aL, "activities"))).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return eq_w93w14_a0a0a0a0a0a0a1a3b(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde68dL, 0x5b6b060cf3fe08f3L, "event")), node);
          }
        }));
      }

      SNodeOperations.deleteNode(node);

    }
    private static boolean eq_w93w14_a0a0a0a0a0a0a1a3b(Object a, Object b) {
      return (a != null ? a.equals(b) : a == b);
    }
  }
  public static class RemoveEventAndActivity_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public RemoveEventAndActivity_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, final SNode node) {

      for (SNode item : ListSequence.fromList(SNodeOperations.getAllSiblings(node, false))) {
        SNodeOperations.deleteNode(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, "jetbrains.mps.samples.VoiceMenu.structure.Menu")), MetaAdapterFactory.getContainmentLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde308L, 0x5b6b060cf3fde68aL, "activities"))).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return eq_w93w14_a0a0a0a0a0a0a1a3c(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x4bc750d756884f52L, 0xb7d5b263a3393a24L, 0x5b6b060cf3fde68dL, 0x5b6b060cf3fe08f3L, "event")), node);
          }
        }));
      }

      SNodeOperations.deleteNode(node);

    }
    private static boolean eq_w93w14_a0a0a0a0a0a0a1a3c(Object a, Object b) {
      return (a != null ? a.equals(b) : a == b);
    }
  }
}
