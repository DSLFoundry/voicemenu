package jetbrains.mps.samples.Text.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class Same_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("same  => ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.priority$sWIn));
    tgs.append(",");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.action$sWXo));
    if ((SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.argument$sWgl) != null)) {
      tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.argument$sWgl));
    }
    tgs.newLine();
  }

  private static final class PROPS {
    /*package*/ static final SProperty priority$sWIn = MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x13a8ce4f7160338bL, 0x13a8ce4f7160338eL, "priority");
    /*package*/ static final SProperty action$sWXo = MetaAdapterFactory.getProperty(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x13a8ce4f7160338bL, 0x13a8ce4f7160338fL, "action");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink argument$sWgl = MetaAdapterFactory.getContainmentLink(0x914c58c4068049cfL, 0x8599f5ced7a657d6L, 0x13a8ce4f7160338bL, 0x13a8ce4f7160338cL, "argument");
  }
}
